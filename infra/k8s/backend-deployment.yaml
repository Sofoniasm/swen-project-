apiVersion: apps/v1
kind: Deployment
metadata:
  name: aiops-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aiops-backend
  template:
    metadata:
      labels:
        app: aiops-backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/REPLACE_OWNER/swen-project-backend:main
          ports:
            - containerPort: 8000
          env:
            - name: LOG_LEVEL
              value: info
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aiops-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aiops-backend
  template:
    metadata:
      labels:
        app: aiops-backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/REPLACE_OWNER/swen-project-backend:main
          ports:
            - containerPort: 8000
          env:
            - name: LOG_LEVEL
              value: info
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
apiVersion: apps/v1
kind: Deployment
```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aiops-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aiops-backend
  template:
    metadata:
      labels:
        app: aiops-backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/REPLACE_OWNER/swen-project-backend:main
          ports:
            - containerPort: 8000
          env:
            - name: LOG_LEVEL
              value: info
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
