name: CI

on:
  push:
  pull_request:

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install backend deps (best-effort)
        run: |
          python -m pip install --upgrade pip
          if [ -f api/requirements.txt ]; then pip install -r api/requirements.txt || true; fi
      - name: Run pytest
        run: |
          if [ -f api/requirements.txt ] || [ -d api ]; then python -m pytest -q || true; fi
      - name: Run ruff (lint)
        run: |
          python -m pip install --upgrade pip
          pip install ruff || true
          ruff check || true

  build:
    runs-on: ubuntu-latest
    needs: test-and-lint
    steps:
      - uses: actions/checkout@v4
      - name: Build backend image
        run: docker build -f Dockerfile.backend -t aiops-backend:latest .
      - name: Build frontend image (if present)
        run: |
          if [ -f frontend/package.json ]; then docker build -f Dockerfile.frontend -t aiops-frontend:latest .; else echo "No frontend/package.json; skipping frontend build"; fi
      - name: Publish to GHCR (optional)
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          if [ -z "$GHCR_TOKEN" ]; then echo "GHCR_TOKEN not set, skipping publish"; exit 0; fi
          echo "$GHCR_TOKEN" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          docker tag aiops-backend:latest ghcr.io/${{ toLower(github.repository) }}/aiops-backend:latest
          docker push ghcr.io/${{ toLower(github.repository) }}/aiops-backend:latest
          if [ -f frontend/package.json ]; then docker tag aiops-frontend:latest ghcr.io/${{ toLower(github.repository) }}/aiops-frontend:latest && docker push ghcr.io/${{ toLower(github.repository) }}/aiops-frontend:latest; fi
