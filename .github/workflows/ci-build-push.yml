name: CI â€” build & push images

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare lowercase owner
        run: |
          # Normalize repository owner to lowercase to satisfy Docker tag rules
          echo "REPO_OWNER_LOWER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile.backend
          push: true
          tags: |
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/swen-project-backend:main
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/swen-project-backend:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/swen-project-frontend:main
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/swen-project-frontend:${{ github.sha }}

      - name: Save pushed image refs
        run: |
          echo "BACKEND_IMAGE=ghcr.io/${{ env.REPO_OWNER_LOWER }}/swen-project-backend:${{ github.sha }}" >> images.properties
          echo "FRONTEND_IMAGE=ghcr.io/${{ env.REPO_OWNER_LOWER }}/swen-project-frontend:${{ github.sha }}" >> images.properties

      - name: Upload image refs artifact
        uses: actions/upload-artifact@v4
        with:
          name: images
          path: images.properties

      - name: Upload image tags as artifact
        uses: actions/upload-artifact@v4
        with:
          name: images
          path: |
            .

      - name: Create image update branch and PR
        if: always()
        env:
          IMAGE_BACKEND: ghcr.io/${{ env.REPO_OWNER_LOWER }}/swen-project-backend:${{ github.sha }}
          IMAGE_FRONTEND: ghcr.io/${{ env.REPO_OWNER_LOWER }}/swen-project-frontend:${{ github.sha }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git checkout -b image-updates/${{ github.sha }}
          # Update backend image in infra manifests
          sed -i "s|ghcr.io/REPLACE_OWNER/swen-project-backend:main|${IMAGE_BACKEND}|g" infra/k8s/* || true
          sed -i "s|ghcr.io/REPLACE_OWNER/swen-project-frontend:main|${IMAGE_FRONTEND}|g" infra/k8s/* || true
          git add infra/k8s || true
          git commit -m "chore: update k8s images to ${{ github.sha }}" || echo "no changes"
          git push --set-upstream origin image-updates/${{ github.sha }} || true

      - name: Create Pull Request for image updates
        if: always()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update k8s images to ${{ github.sha }}"
          branch: image-updates/${{ github.sha }}
          title: "ci: update images to ${{ github.sha }}"
          body: |
            This PR updates the Kubernetes manifests in `infra/k8s` to use images built by CI (tagged with the commit SHA). The ArgoCD application will pick these up and deploy them to the cluster once ArgoCD is installed and syncing.
          base: main
