name: 'Infra â€” Provision via Actions (OIDC)'

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  provision:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.7'

      - name: Terraform init
        working-directory: infra/terraform
        run: terraform init -input=false

      - name: Terraform apply (create EKS)
        working-directory: infra/terraform
        run: terraform apply -auto-approve

      - name: Terraform outputs
        id: tfoutputs
        working-directory: infra/terraform
        run: |
          terraform output -raw cluster_name > cluster_name.txt || true
          echo "cluster_name=$(cat cluster_name.txt)" >> $GITHUB_OUTPUT

      - name: Install kubectl and helm
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ steps.tfoutputs.outputs.cluster_name }} --region ${{ secrets.AWS_REGION }}

      - name: Install cert-manager (Helm)
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm upgrade --install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.11.0 --set installCRDs=true

      - name: Install ingress-nginx (Helm)
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress-nginx --create-namespace --set controller.replicaCount=1 --set controller.service.type=LoadBalancer

      - name: Apply cert-manager ClusterIssuer (HTTP-01)
        run: |
          kubectl apply -f infra/cert-manager/cluster-issuer-http01.yaml || true

      - name: Apply ArgoCD Ingress
        run: |
          kubectl apply -f infra/k8s/argocd-ingress.yaml || true

      - name: Install ArgoCD (Helm)
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo update
          helm upgrade --install argocd argo/argo-cd --namespace argocd --create-namespace \
            --set server.service.type=ClusterIP \
            --set controller.replicas=1

      - name: Wait for ArgoCD server
        run: |
          kubectl -n argocd rollout status deployment argocd-server --timeout=3m || true

      - name: Output LB info
        run: |
          kubectl -n ingress-nginx get svc -l app.kubernetes.io/component=controller -o jsonpath='{.items[0].status.loadBalancer.ingress[0]}' || true
